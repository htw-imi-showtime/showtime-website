name: Own Files Only

# this workflow checks whether a pull request changes only files in the project folder"
# PR Titles have to start with the Project ID! (e.g. B1: ....)
on:
  pull_request:
    

  workflow_dispatch:

jobs:
  check-own-files:
    runs-on: ubuntu-latest
    steps:
    - name: vars
      run: |
        echo "some github variables:" \
        echo $GITHUB_REF  \
        echo "sha: ${{ github.event.head_commit.sha }}" \
        echo "message: ${{ github.event.head_commit.message }}" \
        echo "pr commit sha: ${{ github.event.pull_request.head.sha }}" \
        echo "pr commit ref: ${{ github.event.pull_request.head.ref }}" \
        echo "pr commit message: ${{ github.event.pull_request.head.message }}" \
        echo "pr commit: ${{ github.event.pull_request.head }}" \
        echo "base ref: ${{ github.event.pull_request.base.ref }}" \
        echo "base sha: ${{ github.event.pull_request.base.sha }}" \
        echo "event: ${{ github.event }}" \
        echo "event: ${{ github.event.message }}" \

    - uses: actions/checkout@v4
      with:
        submodules: false
    
    - name: "checkout relevant refs"
      run: |
        git log
        git status
        git fetch --no-tags --depth=1 origin main
        git checkout main
        echo "about to pr base"
        git fetch origin ${{ github.event.pull_request.base.sha }}
        git checkout -b pr_base ${{ github.event.pull_request.base.sha }}
        # echo "about to checkout merge commit"
        # git fetch origin ${{ github.event.pull_request.merge_commit_sha }}
        # git checkout -b pr_merge_commit ${{ github.event.pull_request.merge_commit_sha }}
        echo "about to checkout head"
        git fetch origin  ${{ github.event.pull_request.head.sha }}
        git checkout -b pr_head ${{ github.event.pull_request.head.sha }}

    - name: extract project id
      id: extract_pid
      env: 
        PR_TITLE: ${{ github.event.pull_request.title }}
           
      run: |
           echo P_ID: "$P_ID" 
           echo "PR_TITLE: $PR_TITLE" 
           PID="${PR_TITLE:0:2}" 
           echo "PID $PID" 
           PID2=$(echo $PID | tr '[:upper:]' '[:lower:]') 
           echo "PID2 $PID2"
           echo "project_id=$PID2" >> $GITHUB_OUTPUT
           echo "allowed_path=ss24/$PID2" >> $GITHUB_OUTPUT
           
             

    - name: "diff base head"
      continue-on-error: true
      run: |
          echo "files changed: "
          git diff --name-only pr_base pr_head
  
    - name: "grep test"
      continue-on-error: true
      run: |
        echo "files changed: "
        git diff --name-only pr_base pr_head | grep -v ${{ steps.extract_pid.outputs.allowed_path }}

    - name: "git diff main with check"
      run: |
         if [[ "" != $(git diff --name-only pr_base pr_head  | grep -v ${{ steps.extract_pid.outputs.allowed_path }}) ]]; then 
                echo "ERROR: More files changed than allowed!"
                echo "------ Additional Files: "
                git diff --name-only pr_base pr_head  | grep -v "${{ steps.extract_pid.outputs.allowed_path }}"
                echo "------ Allowed Files:"
                git diff --name-only pr_base pr_head  | grep "${{ steps.extract_pid.outputs.allowed_path }}"
                exit 123
            else
                echo "all good"
         fi
